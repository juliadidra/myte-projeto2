@model myte.Models.CalendarPageViewModel

<h2>Registro de Horas</h2>

<div class="calendar-container">
    <div class="calendar-header">
        <button id="prev" type="button">Anterior</button>
        <span id="quinzena-label"></span>
        <button id="next" type="button">Próximo</button>
    </div>

    <table class="calendar-table">
        <thead>
            <tr id="header-row">
                <th class="vw-100">WBS</th>
                @for (int i = 1; i <= 15; i++)
                {
                    <th class="w-25">Dia @i</th>
                }
            </tr>
        </thead>
        <tbody id="calendar-body">
        </tbody>
    </table>
</div>

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Atualizar Registro de Horas</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editForm" method="post" asp-action="Update">
                    <input type="hidden" id="editDia" name="Dia" />
                    <input type="hidden" id="editWbs" name="WBS_Codigo" />
                    <div class="form-group">
                        <label for="editHoras">Horas</label>
                        <input type="number" class="form-control" id="editHoras" name="Horas" />
                    </div>
                    <input type="hidden" name="Funcionario_Email" value="julia@email.com" />
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Salvar mudanças</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quinzenaLabel = document.getElementById('quinzena-label');
            const prevButton = document.getElementById('prev');
            const nextButton = document.getElementById('next');
            const calendarBody = document.getElementById('calendar-body');
            let currentDate = new Date();
            let currentQuinzena = 1;

            // Obter dados do modelo
            const wbsList = @Html.Raw(Json.Serialize(Model.WbsList));
            const registroHorasList = @Html.Raw(Json.Serialize(Model.RegistroHorasList));

            console.log('WBS List:', wbsList);
            console.log('Registro Horas List:', registroHorasList);

            function getQuinzena(date) {
                const day = date.getDate();
                return day <= 15 ? 1 : 2;
            }

            function renderCalendar() {
                const year = currentDate.getFullYear();
                const month = currentDate.getMonth();
                const startDay = currentQuinzena === 1 ? 1 : 16;
                const endDay = currentQuinzena === 1 ? 15 : new Date(year, month + 1, 0).getDate();

                if (quinzenaLabel) {
                    quinzenaLabel.textContent = `Quinzena ${currentQuinzena} de ${month + 1}/${year}`;
                }

                calendarBody.innerHTML = '';

                wbsList.forEach(wbs => {
                    // if (!wbs || !wbs.Nome) {
                    //     console.error('WBS data is missing:', wbs);
                    //     return;
                    // }

                    console.log('Processing WBS:', wbs.Nome);

                    const row = document.createElement('tr');
                    const wbsNameCell = document.createElement('td');
                    wbsNameCell.textContent = wbs.Nome;
                    row.appendChild(wbsNameCell);

                    for (let day = startDay; day <= endDay; day++) {
                        console.log('Processing Day:', day);

                        const cell = document.createElement('td');
                        const date = new Date(year, month, day);
                        if (isNaN(date)) {
                            console.error('Invalid date:', date);
                            continue;
                        }
                        const dateString = date.toISOString().split('T')[0];

                        const registro = registroHorasList.find(r => new Date(r.Dia).toISOString().split('T')[0] === dateString && r.WBS_Codigo === wbs.Codigo);
                        const horas = registro ? registro.Horas : '';

                        cell.innerHTML = `
                                    <div>Dia ${day}</div>
                                    <div class="d-flex">
                                        <input type="number" value="${horas}" disabled class="hours-input" data-dia="${dateString}" data-wbs="${wbs.Codigo}" />
                                        <button type="button" class="btn btn-primary btn-edit" data-dia="${dateString}" data-wbs="${wbs.Codigo}" data-horas="${horas}" data-toggle="modal" data-target="#editModal">Editar</button>
                                    </div>`;
                        row.appendChild(cell);
                    }
                    calendarBody.appendChild(row);
                });
            }

            prevButton.addEventListener('click', () => {
                if (currentQuinzena === 1) {
                    currentDate.setMonth(currentDate.getMonth() - 1);
                    currentQuinzena = 2;
                } else {
                    currentQuinzena = 1;
                }
                renderCalendar();
            });

            nextButton.addEventListener('click', () => {
                if (currentQuinzena === 2) {
                    currentDate.setMonth(currentDate.getMonth() + 1);
                    currentQuinzena = 1;
                } else {
                    currentQuinzena = 2;
                }
                renderCalendar();
            });

            renderCalendar();

            $('#editModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                const dia = button.data('dia');
                const wbs = button.data('wbs');
                const horas = button.data('horas');

                const modal = $(this);
                modal.find('#editDia').val(dia);
                modal.find('#editWbs').val(wbs);
                modal.find('#editHoras').val(horas);
            });
        });
    </script>
}
